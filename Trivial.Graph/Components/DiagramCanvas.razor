<div class="diagram-canvas @Class"
     tabindex="-1"
     @ref="ElementReference"
     @onpointerdown="OnPointerDown"
     @onpointermove="OnPointerMove"
     @onpointerup="OnPointerUp"
     @onkeydown="OnKeyDown"
     @onwheel="OnWheel"
     @onpointermove:preventDefault
     @onwheel:stopPropagation>

    <svg class="diagram-svg-layer" style="@GetLayerStyle(BlazorDiagram.Options.LinksLayerOrder)">

        @foreach (var t_Model in BlazorDiagram.OrderedSelectables)
        {
            if (t_Model is SvgNodeModel t_Node && t_Node.Group == null)
            {
                <NodeRenderer @key="t_Node" Node="t_Node" />
            }
            else if (t_Model is SvgGroupModel t_Group && t_Group.Group == null)
            {
                <GroupRenderer @key="t_Group" Group="t_Group" />
            }
            else if (t_Model is BaseLinkModel t_Link)
            {
                <LinkRenderer @key="t_Link" Link="t_Link" />
            }
        }

        <ControlsLayerRenderer Svg="@true"></ControlsLayerRenderer>

        @AdditionalSvg
    </svg>

    <div class="diagram-html-layer" style="@GetLayerStyle(BlazorDiagram.Options.NodesLayerOrder)">

        @foreach (var t_Model in BlazorDiagram.OrderedSelectables)
        {
            if (t_Model is GroupModel t_Group)
            {
                if (t_Group.Group == null && t_Group is not SvgGroupModel)
                {
                    <GroupRenderer @key="t_Group" Group="t_Group" />
                }
            }
            else if (t_Model is NodeModel t_Node && t_Node.Group == null && t_Node is not SvgNodeModel)
            {
                <NodeRenderer @key="t_Node" Node="t_Node" />
            }
        }

        <ControlsLayerRenderer Svg="@false"></ControlsLayerRenderer>

        @AdditionalHtml
    </div>

    @Widgets
</div>